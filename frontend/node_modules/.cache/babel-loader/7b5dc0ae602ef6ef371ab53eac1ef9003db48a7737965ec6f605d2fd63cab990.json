{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding_kdh\\\\Y2023\\\\007_react\\\\webapp_simulator_v1\\\\frontend\\\\src\\\\pages\\\\SimulatorPage.js\",\n  _s = $RefreshSig$();\n// src/pages/SimulatorPage.js\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SimulatorHeader from \"../components/SimulatorHeader\";\nimport SimulatorInputForm from \"../components/SimulatorInputForm\";\nimport SimulatorContentContainer from \"../components/SimulatorContentContainer\";\nimport SimulatorFooter from \"../components/SimulatorFooter\";\nimport \"./SimulatorPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimulatorPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [modelInfo, setModelInfo] = useState(null);\n  const [inputs, setInputs] = useState([]);\n  const [isSimulated, setIsSimulated] = useState(false);\n  const [simulationResult, setSimulationResult] = useState(null);\n  useEffect(() => {\n    fetchModelInfo();\n  }, []);\n  const fetchModelInfo = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/model-info`);\n      const modelData = response.data;\n      setModelInfo(modelData);\n      initializeInputs(modelData.input_shape[1]);\n      console.log(modelData.input_shape);\n    } catch (error) {\n      console.error(\"Error fetching model info:\", error);\n    }\n  };\n  const initializeInputs = inputParams => {\n    const initialInputs = inputParams.map(param => ({\n      ...param,\n      value: '',\n      error: ''\n    }));\n    setInputs(initialInputs);\n  };\n  const handleInputChange = (index, value) => {\n    const newInputs = [...inputs];\n    newInputs[index].value = value;\n    setInputs(newInputs);\n  };\n  const isFormValid = () => {\n    return inputs.every(input => input.value !== \"\");\n  };\n  const validateInputs = () => {\n    const regex = /^\\d+(\\.\\d+)?$/;\n    const updatedInputs = inputs.map(input => {\n      if (input.value === '') {\n        return {\n          ...input,\n          error: '값을 입력해주세요.'\n        };\n      }\n      if (!regex.test(input.value)) {\n        return {\n          ...input,\n          error: \"유효하지 않은 입력입니다.\"\n        };\n      }\n      const numericValue = parseFloat(input.value);\n      if (isNaN(numericValue) || numericValue < input.min || numericValue > input.max) {\n        return {\n          ...input,\n          error: `값은 ${input.min}에서 ${input.max} 사이여야 합니다.`\n        };\n      }\n      return {\n        ...input,\n        error: \"\"\n      };\n    });\n    setInputs(updatedInputs);\n    return updatedInputs.every(input => input.error === \"\");\n  };\n  const handleSimulate = async () => {\n    if (validateInputs()) {\n      try {\n        const inputData = inputs.map(input => parseFloat(input.value));\n        const response = await axios.post('http://localhost:5000/api/predict', {\n          data: inputData\n        });\n        const predictions = response.data.predictions[0];\n        const formattedResult = modelInfo.outputs.map((output, index) => `${output.name}: ${predictions[index].toFixed(2)}`).join(', ');\n        setSimulationResult(formattedResult);\n        setIsSimulated(true);\n      } catch (error) {\n        console.error('Error simulating:', error);\n      }\n    }\n  };\n  if (!modelInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulator-page\",\n    children: [/*#__PURE__*/_jsxDEV(SimulatorHeader, {\n      title: \"Simulator\",\n      onSimulate: () => handleSimulate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simulator-content\",\n      children: [/*#__PURE__*/_jsxDEV(SimulatorInputForm, {\n        inputs: inputs,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SimulatorContentContainer, {\n        isSimulated: isSimulated,\n        description: \"Input parameter description\",\n        report: simulationResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimulatorFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulatorPage, \"NbgIFOBzyWER4d7CfwHzdJmhSYY=\", false, function () {\n  return [useParams];\n});\n_c = SimulatorPage;\nexport default SimulatorPage;\nvar _c;\n$RefreshReg$(_c, \"SimulatorPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","SimulatorHeader","SimulatorInputForm","SimulatorContentContainer","SimulatorFooter","jsxDEV","_jsxDEV","SimulatorPage","_s","id","modelInfo","setModelInfo","inputs","setInputs","isSimulated","setIsSimulated","simulationResult","setSimulationResult","fetchModelInfo","response","get","modelData","data","initializeInputs","input_shape","console","log","error","inputParams","initialInputs","map","param","value","handleInputChange","index","newInputs","isFormValid","every","input","validateInputs","regex","updatedInputs","test","numericValue","parseFloat","isNaN","min","max","handleSimulate","inputData","post","predictions","formattedResult","outputs","output","name","toFixed","join","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","onSimulate","onChange","description","report","_c","$RefreshReg$"],"sources":["C:/Coding_kdh/Y2023/007_react/webapp_simulator_v1/frontend/src/pages/SimulatorPage.js"],"sourcesContent":["// src/pages/SimulatorPage.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimulatorHeader from \"../components/SimulatorHeader\";\r\nimport SimulatorInputForm from \"../components/SimulatorInputForm\";\r\nimport SimulatorContentContainer from \"../components/SimulatorContentContainer\";\r\nimport SimulatorFooter from \"../components/SimulatorFooter\";\r\nimport \"./SimulatorPage.css\";\r\n\r\nconst SimulatorPage = () => {\r\n  const { id } = useParams();\r\n  const [modelInfo, setModelInfo] = useState(null);\r\n  const [inputs, setInputs] = useState([]);\r\n  const [isSimulated, setIsSimulated] = useState(false);\r\n  const [simulationResult, setSimulationResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchModelInfo();\r\n  }, []);\r\n\r\n  const fetchModelInfo = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/model-info`);\r\n      const modelData = response.data;\r\n      setModelInfo(modelData);\r\n      initializeInputs(modelData.input_shape[1]);\r\n      console.log(modelData.input_shape)\r\n    } catch (error) {\r\n      console.error(\"Error fetching model info:\", error);\r\n    }\r\n  };\r\n\r\n  const initializeInputs = (inputParams) => {\r\n    const initialInputs = inputParams.map((param) => ({\r\n      ...param,\r\n      value: '',\r\n      error: '',\r\n    }));\r\n    setInputs(initialInputs);\r\n  };\r\n\r\n  const handleInputChange = (index, value) => {\r\n    const newInputs = [...inputs];\r\n    newInputs[index].value = value;\r\n    setInputs(newInputs);\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return inputs.every((input) => input.value !== \"\");\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    const regex = /^\\d+(\\.\\d+)?$/;\r\n    const updatedInputs = inputs.map((input) => {\r\n      if (input.value === '') {\r\n        return { ...input, error: '값을 입력해주세요.' };\r\n      }\r\n      if (!regex.test(input.value)) {\r\n        return { ...input, error: \"유효하지 않은 입력입니다.\" };\r\n      }\r\n      const numericValue = parseFloat(input.value);\r\n      if (isNaN(numericValue) || numericValue < input.min || numericValue > input.max) {\r\n        return { ...input, error: `값은 ${input.min}에서 ${input.max} 사이여야 합니다.` };\r\n      }\r\n      return { ...input, error: \"\" };\r\n    });\r\n    setInputs(updatedInputs);\r\n    return updatedInputs.every((input) => input.error === \"\");\r\n  };\r\n\r\n  const handleSimulate = async () => {\r\n    if (validateInputs()) {\r\n      try {\r\n        const inputData = inputs.map((input) => parseFloat(input.value));\r\n        const response = await axios.post('http://localhost:5000/api/predict', { data: inputData });\r\n        const predictions = response.data.predictions[0];\r\n        const formattedResult = modelInfo.outputs.map((output, index) => `${output.name}: ${predictions[index].toFixed(2)}`).join(', ');\r\n        setSimulationResult(formattedResult);\r\n        setIsSimulated(true);\r\n      } catch (error) {\r\n        console.error('Error simulating:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!modelInfo) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"simulator-page\">\r\n      <SimulatorHeader title=\"Simulator\" onSimulate={() => handleSimulate()} />\r\n      <div className=\"simulator-content\">\r\n        <SimulatorInputForm inputs={inputs} onChange={handleInputChange} />\r\n        <SimulatorContentContainer\r\n          isSimulated={isSimulated}\r\n          description=\"Input parameter description\"\r\n          report={simulationResult}\r\n        />\r\n      </div>\r\n      <SimulatorFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimulatorPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}