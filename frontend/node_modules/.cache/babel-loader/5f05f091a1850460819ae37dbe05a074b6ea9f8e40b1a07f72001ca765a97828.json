{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding_kdh\\\\Y2023\\\\007_react\\\\webapp_simulator_v1\\\\frontend\\\\src\\\\components\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\n// RegisterForm.js\nimport React, { useState } from \"react\";\nimport AuthService from \"../services/AuthService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(\"\");\n  const COMPANY_NAME = \"mycompany.com\";\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      // 비밀번호와 비밀번호 확인이 일치하지 않을 경우 처리할 로직 추가\n      alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다.\");\n      return;\n    }\n    if (!validateUsername(username)) {\n      setUsernameError(\"유효한 사용자명을 입력해주세요. ex) test@mycomany.com -> test\");\n      return;\n    }\n    try {\n      await AuthService.register(username, password);\n      // 회원가입 성공 후 처리할 로직 추가\n      alert(\"회원가입이 성공적으로 완료되었습니다.\");\n    } catch (error) {\n      // 회원가입 실패 시 처리할 로직 추가\n      alert(\"회원가입에 실패했습니다. 다시 시도해주세요.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleRegister,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => {\n          setUsername(e.target.value);\n          setUsernameError(\"\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), \"`@\", COMPANY_NAME, \"`\", emailError && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"egaUGGA9ZG8Fp3Dd9aHlol4hV/c=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","AuthService","jsxDEV","_jsxDEV","RegisterForm","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","usernameError","setUsernameError","COMPANY_NAME","handleRegister","e","preventDefault","alert","validateUsername","register","error","onSubmit","children","type","placeholder","value","email","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","emailError","className","_c","$RefreshReg$"],"sources":["C:/Coding_kdh/Y2023/007_react/webapp_simulator_v1/frontend/src/components/RegisterForm.js"],"sourcesContent":["// RegisterForm.js\r\nimport React, { useState } from \"react\";\r\nimport AuthService from \"../services/AuthService\";\r\n\r\nconst RegisterForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [usernameError, setUsernameError] = useState(\"\");\r\n  const COMPANY_NAME = \"mycompany.com\"\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      // 비밀번호와 비밀번호 확인이 일치하지 않을 경우 처리할 로직 추가\r\n      alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다.\");\r\n      return;\r\n    }\r\n    if (!validateUsername(username)) {\r\n      setUsernameError(\"유효한 사용자명을 입력해주세요. ex) test@mycomany.com -> test\");\r\n      return;\r\n    }\r\n    try {\r\n      await AuthService.register(username, password);\r\n      // 회원가입 성공 후 처리할 로직 추가\r\n      alert(\"회원가입이 성공적으로 완료되었습니다.\");\r\n    } catch (error) {\r\n      // 회원가입 실패 시 처리할 로직 추가\r\n      alert(\"회원가입에 실패했습니다. 다시 시도해주세요.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleRegister}>\r\n      <div>\r\n        {\" \"}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => {\r\n            setUsername(e.target.value);\r\n            setUsernameError(\"\");\r\n          }}\r\n        />\r\n        `@{COMPANY_NAME}`\r\n        {emailError && <span className=\"error\">{emailError}</span>}\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        {\" \"}\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}