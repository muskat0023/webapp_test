{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding_kdh\\\\Y2023\\\\007_react\\\\webapp_simulator_v1\\\\frontend\\\\src\\\\components\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\n// RegisterForm.js\nimport React, { useState } from \"react\";\nimport AuthService from \"../services/AuthService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      // 비밀번호와 비밀번호 확인이 일치하지 않을 경우 처리할 로직 추가\n      alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다.\");\n      return;\n    }\n    try {\n      await AuthService.register(email, password);\n      // 회원가입 성공 후 처리할 로직 추가\n      alert(\"회원가입이 성공적으로 완료되었습니다.\");\n    } catch (error) {\n      // 회원가입 실패 시 처리할 로직 추가\n      alert(\"회원가입에 실패했습니다. 다시 시도해주세요.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleRegister,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), \"@mycompany.com\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"MT1soXlHw5oVJwENzJZGMb+nqNE=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","AuthService","jsxDEV","_jsxDEV","RegisterForm","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleRegister","e","preventDefault","alert","register","error","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Coding_kdh/Y2023/007_react/webapp_simulator_v1/frontend/src/components/RegisterForm.js"],"sourcesContent":["// RegisterForm.js\r\nimport React, { useState } from \"react\";\r\nimport AuthService from \"../services/AuthService\";\r\n\r\nconst RegisterForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      // 비밀번호와 비밀번호 확인이 일치하지 않을 경우 처리할 로직 추가\r\n      alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다.\");\r\n      return;\r\n    }\r\n    try {\r\n      await AuthService.register(email, password);\r\n      // 회원가입 성공 후 처리할 로직 추가\r\n      alert(\"회원가입이 성공적으로 완료되었습니다.\");\r\n    } catch (error) {\r\n      // 회원가입 실패 시 처리할 로직 추가\r\n      alert(\"회원가입에 실패했습니다. 다시 시도해주세요.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleRegister}>\r\n      <div>\r\n        {\" \"}\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        @mycompany.com\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        {\" \"}\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMY,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIN,QAAQ,KAAKE,eAAe,EAAE;MAChC;MACAK,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACF;IACA,IAAI;MACF,MAAMd,WAAW,CAACe,QAAQ,CAACV,KAAK,EAAEE,QAAQ,CAAC;MAC3C;MACAO,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd;MACAF,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;EAED,oBACEZ,OAAA;IAAMe,QAAQ,EAAEN,cAAe;IAAAO,QAAA,gBAC7BhB,OAAA;MAAAgB,QAAA,GACG,GAAG,eACJhB,OAAA;QACEiB,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAEhB,KAAM;QACbiB,QAAQ,EAAGV,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACW,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,kBAEJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNzB,OAAA;MAAAgB,QAAA,eACEhB,OAAA;QACEiB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEd,QAAS;QAChBe,QAAQ,EAAGV,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACW,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNzB,OAAA;MAAAgB,QAAA,GACG,GAAG,eACJhB,OAAA;QACEiB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAEZ,eAAgB;QACvBa,QAAQ,EAAGV,CAAC,IAAKF,kBAAkB,CAACE,CAAC,CAACW,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNzB,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAACvB,EAAA,CAtDID,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAwDlB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}