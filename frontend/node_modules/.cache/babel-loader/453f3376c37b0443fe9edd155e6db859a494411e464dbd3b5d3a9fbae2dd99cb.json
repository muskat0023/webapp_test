{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/api/auth/\";\nclass AuthService {\n  login(username, password) {\n    return axios.post(API_URL + \"login\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        this.setAuthToken(response.data.token); // 로그인 시 토큰 설정\n      }\n      return response.data;\n    });\n  }\n  logout() {\n    return axios.post(API_URL + \"logout\").then(() => {\n      localStorage.removeItem(\"user\");\n      this.removeAuthToken(); // 로그아웃 시 토큰 제거\n    });\n  }\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n  setAuthToken(token) {\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common[\"Authorization\"];\n    }\n  }\n  removeAuthToken() {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n  isAuthenticated() {\n    const user = this.getCurrentUser();\n    return user && user.token;\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","API_URL","AuthService","login","username","password","post","then","response","data","token","localStorage","setItem","JSON","stringify","setAuthToken","logout","removeItem","removeAuthToken","register","email","defaults","headers","common","getCurrentUser","parse","getItem","isAuthenticated","user"],"sources":["C:/Coding_kdh/Y2023/007_react/webapp_simulator_v1/frontend/src/services/AuthService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"login\", {\r\n        username,\r\n        password,\r\n      })\r\n      .then((response) => {\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n          this.setAuthToken(response.data.token); // 로그인 시 토큰 설정\r\n        }\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    return axios\r\n      .post(API_URL + \"logout\")\r\n      .then(() => {\r\n        localStorage.removeItem(\"user\");\r\n        this.removeAuthToken(); // 로그아웃 시 토큰 제거\r\n      });\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n  }\r\n\r\n  setAuthToken(token) {\r\n    if (token) {\r\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n    } else {\r\n      delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n  }\r\n\r\n  removeAuthToken() {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n  }\r\n\r\n  isAuthenticated() {\r\n    const user = this.getCurrentUser();\r\n    return user && user.token;\r\n  }\r\n}\r\n\r\nexport default new AuthService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC;AAEjD,MAAMC,WAAW,CAAC;EAChBC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACxB,OAAOL,KAAK,CACTM,IAAI,CAACL,OAAO,GAAG,OAAO,EAAE;MACvBG,QAAQ;MACRC;IACF,CAAC,CAAC,CACDE,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,IAAI,CAACC,KAAK,EAAE;QACvBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAACM,YAAY,CAACP,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;MAC1C;MACA,OAAOF,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC;EACN;EAEAO,MAAMA,CAAA,EAAG;IACP,OAAOhB,KAAK,CACTM,IAAI,CAACL,OAAO,GAAG,QAAQ,CAAC,CACxBM,IAAI,CAAC,MAAM;MACVI,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;MAC/B,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC;EACN;EAEAC,QAAQA,CAACf,QAAQ,EAAEgB,KAAK,EAAEf,QAAQ,EAAE;IAClC,OAAOL,KAAK,CAACM,IAAI,CAACL,OAAO,GAAG,QAAQ,EAAE;MACpCG,QAAQ;MACRgB,KAAK;MACLf;IACF,CAAC,CAAC;EACJ;EAEAU,YAAYA,CAACL,KAAK,EAAE;IAClB,IAAIA,KAAK,EAAE;MACTV,KAAK,CAACqB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAI,UAASb,KAAM,EAAC;IACpE,CAAC,MAAM;MACL,OAAOV,KAAK,CAACqB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACvD;EACF;EAEAL,eAAeA,CAAA,EAAG;IAChB,OAAOlB,KAAK,CAACqB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACvD;EAEAC,cAAcA,CAAA,EAAG;IACf,OAAOX,IAAI,CAACY,KAAK,CAACd,YAAY,CAACe,OAAO,CAAC,MAAM,CAAC,CAAC;EACjD;EAEAC,eAAeA,CAAA,EAAG;IAChB,MAAMC,IAAI,GAAG,IAAI,CAACJ,cAAc,CAAC,CAAC;IAClC,OAAOI,IAAI,IAAIA,IAAI,CAAClB,KAAK;EAC3B;AACF;AAEA,eAAe,IAAIR,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}