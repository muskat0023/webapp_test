{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding_kdh\\\\Y2023\\\\007_react\\\\webapp_simulator_v1\\\\frontend\\\\src\\\\pages\\\\SimulatorPage.js\",\n  _s = $RefreshSig$();\n// src/pages/SimulatorPage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SimulatorHeader from '../components/SimulatorHeader';\nimport SimulatorInputForm from '../components/SimulatorInputForm';\nimport SimulatorContentContainer from '../components/SimulatorContentContainer';\nimport SimulatorFooter from '../components/SimulatorFooter';\nimport './SimulatorPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimulatorPage = () => {\n  _s();\n  const [modelInfo, setModelInfo] = useState(null);\n  const [inputs, setInputs] = useState([]);\n  const [isSimulated, setIsSimulated] = useState(false);\n  const [simulationResult, setSimulationResult] = useState(null);\n  useEffect(() => {\n    fetchModelInfo();\n  }, []);\n  const fetchModelInfo = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/model-info');\n      const modelData = response.data;\n      setModelInfo(modelData);\n      initializeInputs(modelData.input_shape[1]);\n    } catch (error) {\n      console.error('Error fetching model info:', error);\n    }\n  };\n  const initializeInputs = inputDim => {\n    const initialInputs = Array(inputDim).fill().map((_, index) => ({\n      label: `Input ${index + 1}`,\n      value: ''\n    }));\n    setInputs(initialInputs);\n  };\n  const handleInputChange = (index, value) => {\n    const newInputs = [...inputs];\n    newInputs[index].value = value;\n    setInputs(newInputs);\n  };\n  const handleSimulate = async () => {\n    try {\n      const inputData = inputs.map(input => parseFloat(input.value));\n      const response = await axios.post('http://localhost:5000/predict', {\n        data: inputData\n      });\n      const predictions = response.data.predictions;\n      setSimulationResult(predictions);\n      setIsSimulated(true);\n    } catch (error) {\n      console.error('Error simulating:', error);\n    }\n  };\n  if (!modelInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulator-page\",\n    children: [/*#__PURE__*/_jsxDEV(SimulatorHeader, {\n      title: \"Simulator\",\n      onSimulate: handleSimulate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simulator-content\",\n      children: [/*#__PURE__*/_jsxDEV(SimulatorInputForm, {\n        inputs: inputs,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SimulatorContentContainer, {\n        isSimulated: isSimulated,\n        description: \"Input parameter description\",\n        report: simulationResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimulatorFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulatorPage, \"Sh7JiPs+U9vKk1PRYoXgZmhO6iA=\");\n_c = SimulatorPage;\nexport default SimulatorPage;\nvar _c;\n$RefreshReg$(_c, \"SimulatorPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","SimulatorHeader","SimulatorInputForm","SimulatorContentContainer","SimulatorFooter","jsxDEV","_jsxDEV","SimulatorPage","_s","modelInfo","setModelInfo","inputs","setInputs","isSimulated","setIsSimulated","simulationResult","setSimulationResult","fetchModelInfo","response","get","modelData","data","initializeInputs","input_shape","error","console","inputDim","initialInputs","Array","fill","map","_","index","label","value","handleInputChange","newInputs","handleSimulate","inputData","input","parseFloat","post","predictions","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","onSimulate","onChange","description","report","_c","$RefreshReg$"],"sources":["C:/Coding_kdh/Y2023/007_react/webapp_simulator_v1/frontend/src/pages/SimulatorPage.js"],"sourcesContent":["// src/pages/SimulatorPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport SimulatorHeader from '../components/SimulatorHeader';\r\nimport SimulatorInputForm from '../components/SimulatorInputForm';\r\nimport SimulatorContentContainer from '../components/SimulatorContentContainer';\r\nimport SimulatorFooter from '../components/SimulatorFooter';\r\nimport './SimulatorPage.css';\r\n\r\nconst SimulatorPage = () => {\r\n  const [modelInfo, setModelInfo] = useState(null);\r\n  const [inputs, setInputs] = useState([]);\r\n  const [isSimulated, setIsSimulated] = useState(false);\r\n  const [simulationResult, setSimulationResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchModelInfo();\r\n  }, []);\r\n\r\n  const fetchModelInfo = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/model-info');\r\n      const modelData = response.data;\r\n      setModelInfo(modelData);\r\n      initializeInputs(modelData.input_shape[1]);\r\n    } catch (error) {\r\n      console.error('Error fetching model info:', error);\r\n    }\r\n  };\r\n\r\n  const initializeInputs = (inputDim) => {\r\n    const initialInputs = Array(inputDim).fill().map((_, index) => ({\r\n      label: `Input ${index + 1}`,\r\n      value: '',\r\n    }));\r\n    setInputs(initialInputs);\r\n  };\r\n\r\n  const handleInputChange = (index, value) => {\r\n    const newInputs = [...inputs];\r\n    newInputs[index].value = value;\r\n    setInputs(newInputs);\r\n  };\r\n\r\n  const handleSimulate = async () => {\r\n    try {\r\n      const inputData = inputs.map((input) => parseFloat(input.value));\r\n      const response = await axios.post('http://localhost:5000/predict', { data: inputData });\r\n      const predictions = response.data.predictions;\r\n      setSimulationResult(predictions);\r\n      setIsSimulated(true);\r\n    } catch (error) {\r\n      console.error('Error simulating:', error);\r\n    }\r\n  };\r\n\r\n  if (!modelInfo) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"simulator-page\">\r\n      <SimulatorHeader title=\"Simulator\" onSimulate={handleSimulate} />\r\n      <div className=\"simulator-content\">\r\n        <SimulatorInputForm inputs={inputs} onChange={handleInputChange} />\r\n        <SimulatorContentContainer\r\n          isSimulated={isSimulated}\r\n          description=\"Input parameter description\"\r\n          report={simulationResult}\r\n        />\r\n      </div>\r\n      <SimulatorFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimulatorPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}