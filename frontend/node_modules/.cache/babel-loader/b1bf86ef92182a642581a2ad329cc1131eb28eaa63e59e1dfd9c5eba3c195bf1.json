{"ast":null,"code":"// RegisterForm.js\nimport React,{useState}from\"react\";import{useNavigate}from'react-router-dom';import AuthService from\"../services/AuthService\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RegisterForm=()=>{const[username,setUsername]=useState(\"\");const[password,setPassword]=useState(\"\");const[confirmPassword,setConfirmPassword]=useState(\"\");const[usernameError,setUsernameError]=useState(\"\");const navigate=useNavigate();const COMPANY_NAME=\"mycompany.com\";const handleRegister=async e=>{e.preventDefault();if(password!==confirmPassword){// 비밀번호와 비밀번호 확인이 일치하지 않을 경우 처리할 로직 추가\nalert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다.\");return;}if(!validateUsername(username)){setUsernameError(\"유효한 사용자명을 입력해주세요. ex) test@mycomany.com -> test\");return;}try{await AuthService.register(username,password);// 회원가입 성공 후 처리할 로직 추가\nalert(\"회원가입이 성공적으로 완료되었습니다.\");navigate('/');}catch(error){// 회원가입 실패 시 처리할 로직 추가\nalert(\"회원가입에 실패했습니다. 다시 시도해주세요.\");}};const validateUsername=username=>{// 사용자명 유효성 검사 로직 추가\nconst usernameRegex=/^[a-zA-Z0-9._-]+$/;return usernameRegex.test(username);};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleRegister,children:[/*#__PURE__*/_jsxs(\"div\",{children:[\" \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"username\",value:username,onChange:e=>{setUsername(e.target.value);setUsernameError(\"\");}}),\"@\",COMPANY_NAME,usernameError&&/*#__PURE__*/_jsx(\"span\",{className:\"error\",children:usernameError})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value)})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm Password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value)})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Register\"})]});};export default RegisterForm;","map":{"version":3,"names":["React","useState","useNavigate","AuthService","jsx","_jsx","jsxs","_jsxs","RegisterForm","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","usernameError","setUsernameError","navigate","COMPANY_NAME","handleRegister","e","preventDefault","alert","validateUsername","register","error","usernameRegex","test","onSubmit","children","type","placeholder","value","onChange","target","className"],"sources":["C:/Coding_kdh/Y2023/007_react/webapp_simulator_v1/frontend/src/components/RegisterForm.js"],"sourcesContent":["// RegisterForm.js\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AuthService from \"../services/AuthService\";\r\n\r\nconst RegisterForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [usernameError, setUsernameError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const COMPANY_NAME = \"mycompany.com\"\r\n  \r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      // 비밀번호와 비밀번호 확인이 일치하지 않을 경우 처리할 로직 추가\r\n      alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다.\");\r\n      return;\r\n    }\r\n    if (!validateUsername(username)) {\r\n      setUsernameError(\"유효한 사용자명을 입력해주세요. ex) test@mycomany.com -> test\");\r\n      return;\r\n    }\r\n    try {\r\n      await AuthService.register(username, password);\r\n      // 회원가입 성공 후 처리할 로직 추가\r\n      alert(\"회원가입이 성공적으로 완료되었습니다.\");\r\n      navigate('/');\r\n    } catch (error) {\r\n      // 회원가입 실패 시 처리할 로직 추가\r\n      alert(\"회원가입에 실패했습니다. 다시 시도해주세요.\");\r\n    }\r\n  };\r\n  const validateUsername = (username) => {\r\n    // 사용자명 유효성 검사 로직 추가\r\n    const usernameRegex = /^[a-zA-Z0-9._-]+$/;\r\n    return usernameRegex.test(username);\r\n  };\r\n  return (\r\n    <form onSubmit={handleRegister}>\r\n      <div>\r\n        {\" \"}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"username\"\r\n          value={username}\r\n          onChange={(e) => {\r\n            setUsername(e.target.value);\r\n            setUsernameError(\"\");\r\n          }}\r\n        />\r\n        @{COMPANY_NAME}\r\n        {usernameError && <span className=\"error\">{usernameError}</span>}\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}