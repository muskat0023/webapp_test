{"ast":null,"code":"import axios from\"axios\";const API_URL=\"http://localhost:5000/api/auth/\";class AuthService{login(username,password){return axios.post(API_URL+\"login\",{username,password}).then(response=>{if(response.data.token){localStorage.setItem(\"user\",JSON.stringify(response.data));this.setAuthToken(response.data.token);// 로그인 시 토큰 설정\n}return response.data;});}logout(){return axios.post(API_URL+\"logout\").then(()=>{localStorage.removeItem(\"user\");this.removeAuthToken();// 로그아웃 시 토큰 제거\n});}register(username,password){return axios.post(API_URL+\"signup\",{username,email:\"\".concat(username,\"@mycompany.com\"),password});}setAuthToken(token){if(token){axios.defaults.headers.common[\"Authorization\"]=\"Bearer \".concat(token);}else{delete axios.defaults.headers.common[\"Authorization\"];}}removeAuthToken(){delete axios.defaults.headers.common[\"Authorization\"];}getCurrentUser(){return JSON.parse(localStorage.getItem(\"user\"));}isAuthenticated(){const user=this.getCurrentUser();return user&&user.token;}}export default new AuthService();","map":{"version":3,"names":["axios","API_URL","AuthService","login","username","password","post","then","response","data","token","localStorage","setItem","JSON","stringify","setAuthToken","logout","removeItem","removeAuthToken","register","email","concat","defaults","headers","common","getCurrentUser","parse","getItem","isAuthenticated","user"],"sources":["C:/Coding_kdh/Y2023/007_react/webapp_simulator_v1/frontend/src/services/AuthService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"login\", {\r\n        username,\r\n        password,\r\n      })\r\n      .then((response) => {\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n          this.setAuthToken(response.data.token); // 로그인 시 토큰 설정\r\n        }\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    return axios\r\n      .post(API_URL + \"logout\")\r\n      .then(() => {\r\n        localStorage.removeItem(\"user\");\r\n        this.removeAuthToken(); // 로그아웃 시 토큰 제거\r\n      });\r\n  }\r\n\r\n  register(username, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email: `${username}@mycompany.com`,\r\n      password,\r\n    });\r\n  }\r\n\r\n  setAuthToken(token) {\r\n    if (token) {\r\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n    } else {\r\n      delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n  }\r\n\r\n  removeAuthToken() {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n  }\r\n\r\n  isAuthenticated() {\r\n    const user = this.getCurrentUser();\r\n    return user && user.token;\r\n  }\r\n}\r\n\r\nexport default new AuthService();"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAG,iCAAiC,CAEjD,KAAM,CAAAC,WAAY,CAChBC,KAAKA,CAACC,QAAQ,CAAEC,QAAQ,CAAE,CACxB,MAAO,CAAAL,KAAK,CACTM,IAAI,CAACL,OAAO,CAAG,OAAO,CAAE,CACvBG,QAAQ,CACRC,QACF,CAAC,CAAC,CACDE,IAAI,CAAEC,QAAQ,EAAK,CAClB,GAAIA,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAE,CACvBC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC3D,IAAI,CAACM,YAAY,CAACP,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,CAAE;AAC1C,CACA,MAAO,CAAAF,QAAQ,CAACC,IAAI,CACtB,CAAC,CAAC,CACN,CAEAO,MAAMA,CAAA,CAAG,CACP,MAAO,CAAAhB,KAAK,CACTM,IAAI,CAACL,OAAO,CAAG,QAAQ,CAAC,CACxBM,IAAI,CAAC,IAAM,CACVI,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC,CAC/B,IAAI,CAACC,eAAe,CAAC,CAAC,CAAE;AAC1B,CAAC,CAAC,CACN,CAEAC,QAAQA,CAACf,QAAQ,CAAEC,QAAQ,CAAE,CAC3B,MAAO,CAAAL,KAAK,CAACM,IAAI,CAACL,OAAO,CAAG,QAAQ,CAAE,CACpCG,QAAQ,CACRgB,KAAK,IAAAC,MAAA,CAAKjB,QAAQ,kBAAgB,CAClCC,QACF,CAAC,CAAC,CACJ,CAEAU,YAAYA,CAACL,KAAK,CAAE,CAClB,GAAIA,KAAK,CAAE,CACTV,KAAK,CAACsB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,WAAAH,MAAA,CAAaX,KAAK,CAAE,CACpE,CAAC,IAAM,CACL,MAAO,CAAAV,KAAK,CAACsB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,CACvD,CACF,CAEAN,eAAeA,CAAA,CAAG,CAChB,MAAO,CAAAlB,KAAK,CAACsB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,CACvD,CAEAC,cAAcA,CAAA,CAAG,CACf,MAAO,CAAAZ,IAAI,CAACa,KAAK,CAACf,YAAY,CAACgB,OAAO,CAAC,MAAM,CAAC,CAAC,CACjD,CAEAC,eAAeA,CAAA,CAAG,CAChB,KAAM,CAAAC,IAAI,CAAG,IAAI,CAACJ,cAAc,CAAC,CAAC,CAClC,MAAO,CAAAI,IAAI,EAAIA,IAAI,CAACnB,KAAK,CAC3B,CACF,CAEA,cAAe,IAAI,CAAAR,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}